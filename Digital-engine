# Description of the 20bytes digital engine

## The digital engine can be integrated in each eCommerce or service provider thorugh APIs and will grant a workflow almost identical to a traditional payment method

Workflow:

1. After the customer has chosen the products to purchase, they will choose which method to pay with, among those will appear 20bytes.

2. Once selected, the Smart contract ecosystem is called and as a frist action, it will take the order and convert the FIAT price in ETH/BNB/Matic(POL) //More in the future
using Chainlink PriceConsumerV3, confronting different DBs to obtain the most reliable conversion.
  function _convertPriceEUR2Crypto(...) public view returns (uint) {
        ...
        ...
        return Price;
    }

3. This function will show the conversion to the user desktop, this was made just to let the user know what is happening on the blockchain, averey information is generated by the Smart contract ecosystem.
The user can either change cryptocurrency or confirm the payment.
If the user select another cryptocurrency, the Smart contract ecosystem will ask the oracole for the new price conversion, else, the payment will continue.

4. When the user click on "Confirm", the Smart contract ecosystem is called again, passing the previously converted price as value of the transaction.
It will check again the value through the oracle, to prevent fraudolent actions, and lot of other clauses to be sure the transaction is safe and correct.
  function payment(...) external payable returns (string memory) {
        // all requires
        // oracle verification
        // all clauses
        // function logic
        return "Purchase successful";
    }
The Smart contract ecosystem will transfer directly the value to the vendor's wallet, it will not be store into the Smart contract

5. Once regulated, the Smart contract ecosystem will generate a transaction number, usefull to further actions.


Please note: Once deployed, 20bytes will perform the renounce of the ownership through openzeppelin library "Ownable".
